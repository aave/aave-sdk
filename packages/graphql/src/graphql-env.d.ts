/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'AmountInput': { kind: 'INPUT_OBJECT'; name: 'AmountInput'; isOneOf: true; inputFields: [{ name: 'native'; type: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; defaultValue: null }, { name: 'erc20'; type: { kind: 'INPUT_OBJECT'; name: 'Erc20AmountInput'; ofType: null; }; defaultValue: null }]; };
    'ApprovalRequired': { kind: 'OBJECT'; name: 'ApprovalRequired'; fields: { 'approval': { name: 'approval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionRequest'; ofType: null; }; } }; 'currentAllowance': { name: 'currentAllowance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'originalTransaction': { name: 'originalTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionRequest'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'requiredAmount': { name: 'requiredAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'BigDecimal': unknown;
    'BigInt': unknown;
    'BlockchainData': unknown;
    'Boolean': unknown;
    'BorrowRequest': { kind: 'INPUT_OBJECT'; name: 'BorrowRequest'; isOneOf: false; inputFields: [{ name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AmountInput'; ofType: null; }; }; defaultValue: null }, { name: 'borrower'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'onBehalfOf'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }, { name: 'permit'; type: { kind: 'INPUT_OBJECT'; name: 'PermitInput'; ofType: null; }; defaultValue: null }]; };
    'Chain': { kind: 'OBJECT'; name: 'Chain'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ChainId': unknown;
    'Currency': { kind: 'OBJECT'; name: 'Currency'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DateTime': unknown;
    'DecimalValue': { kind: 'OBJECT'; name: 'DecimalValue'; fields: { 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'raw': { name: 'raw'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; }; };
    'EmodeInfo': { kind: 'OBJECT'; name: 'EmodeInfo'; fields: { 'liquidationPenalty': { name: 'liquidationPenalty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'liquidationThreshold': { name: 'liquidationThreshold'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'maxLTV': { name: 'maxLTV'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'EmodeToggleRequest': { kind: 'INPUT_OBJECT'; name: 'EmodeToggleRequest'; isOneOf: false; inputFields: [{ name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }]; };
    'Erc20AmountInput': { kind: 'INPUT_OBJECT'; name: 'Erc20AmountInput'; isOneOf: false; inputFields: [{ name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; }; defaultValue: null }]; };
    'EvmAddress': unknown;
    'InsufficientBalanceError': { kind: 'OBJECT'; name: 'InsufficientBalanceError'; fields: { 'available': { name: 'available'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'required': { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'Int': unknown;
    'Market': { kind: 'OBJECT'; name: 'Market'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'chain': { name: 'chain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Chain'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reserves': { name: 'reserves'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Reserve'; ofType: null; }; }; }; } }; 'totalAvailableLiquidity': { name: 'totalAvailableLiquidity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; 'totalBorrows': { name: 'totalBorrows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; 'totalMarketSize': { name: 'totalMarketSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; 'userStats': { name: 'userStats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserStats'; ofType: null; }; } }; }; };
    'MarketInfo': { kind: 'OBJECT'; name: 'MarketInfo'; fields: { 'chain': { name: 'chain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Chain'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MarketRequest': { kind: 'INPUT_OBJECT'; name: 'MarketRequest'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }]; };
    'MarketUserStats': { kind: 'OBJECT'; name: 'MarketUserStats'; fields: { 'eModeEnabled': { name: 'eModeEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthFactor': { name: 'healthFactor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'netAPY': { name: 'netAPY'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'netWorth': { name: 'netWorth'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'MarketsRequest': { kind: 'INPUT_OBJECT'; name: 'MarketsRequest'; isOneOf: false; inputFields: [{ name: 'chainIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'NativeCurrency': { kind: 'OBJECT'; name: 'NativeCurrency'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderByUserCriteria': { kind: 'INPUT_OBJECT'; name: 'OrderByUserCriteria'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: "DESC" }]; };
    'OrderDirection': { name: 'OrderDirection'; enumValues: 'ASC' | 'DESC'; };
    'PermitInput': { kind: 'INPUT_OBJECT'; name: 'PermitInput'; isOneOf: false; inputFields: [{ name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Signature'; ofType: null; }; }; defaultValue: null }, { name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }]; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { '_service': { name: '_service'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: '_Service'; ofType: null; }; } }; 'borrow': { name: 'borrow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Transaction'; ofType: null; }; } }; 'chains': { name: 'chains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Chain'; ofType: null; }; }; }; } }; 'eModeToggle': { name: 'eModeToggle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionRequest'; ofType: null; }; } }; 'health': { name: 'health'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'markets': { name: 'markets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; }; }; } }; 'repay': { name: 'repay'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Transaction'; ofType: null; }; } }; 'reserve': { name: 'reserve'; type: { kind: 'OBJECT'; name: 'Reserve'; ofType: null; } }; 'supply': { name: 'supply'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Transaction'; ofType: null; }; } }; 'userBorrows': { name: 'userBorrows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserReserveBorrowPosition'; ofType: null; }; }; }; } }; 'userSupplies': { name: 'userSupplies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserReserveSupplyPosition'; ofType: null; }; }; }; } }; 'withdraw': { name: 'withdraw'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Transaction'; ofType: null; }; } }; }; };
    'RepayRequest': { kind: 'INPUT_OBJECT'; name: 'RepayRequest'; isOneOf: false; inputFields: [{ name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AmountInput'; ofType: null; }; }; defaultValue: null }, { name: 'borrower'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'onBehalfOf'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }, { name: 'permit'; type: { kind: 'INPUT_OBJECT'; name: 'PermitInput'; ofType: null; }; defaultValue: null }]; };
    'Reserve': { kind: 'OBJECT'; name: 'Reserve'; fields: { 'aToken': { name: 'aToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Currency'; ofType: null; }; } }; 'acceptsNative': { name: 'acceptsNative'; type: { kind: 'OBJECT'; name: 'NativeCurrency'; ofType: null; } }; 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'available': { name: 'available'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenAmount'; ofType: null; }; } }; 'borrowInfo': { name: 'borrowInfo'; type: { kind: 'OBJECT'; name: 'ReserveBorrowInfo'; ofType: null; } }; 'eModeInfo': { name: 'eModeInfo'; type: { kind: 'OBJECT'; name: 'EmodeInfo'; ofType: null; } }; 'market': { name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketInfo'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenAmount'; ofType: null; }; } }; 'supplyInfo': { name: 'supplyInfo'; type: { kind: 'OBJECT'; name: 'ReserveSupplyInfo'; ofType: null; } }; 'underlyingToken': { name: 'underlyingToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Currency'; ofType: null; }; } }; 'usdExchangeRate': { name: 'usdExchangeRate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; 'usdOracleAddress': { name: 'usdOracleAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'userAvailability': { name: 'userAvailability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReserveUserAvailability'; ofType: null; }; } }; 'utilizationRate': { name: 'utilizationRate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'vToken': { name: 'vToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Currency'; ofType: null; }; } }; }; };
    'ReserveBorrowInfo': { kind: 'OBJECT'; name: 'ReserveBorrowInfo'; fields: { 'apy': { name: 'apy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'borrowCap': { name: 'borrowCap'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'reserveFactor': { name: 'reserveFactor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'ReserveRequest': { kind: 'INPUT_OBJECT'; name: 'ReserveRequest'; isOneOf: false; inputFields: [{ name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }]; };
    'ReserveSupplyInfo': { kind: 'OBJECT'; name: 'ReserveSupplyInfo'; fields: { 'apy': { name: 'apy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'canBeCollateral': { name: 'canBeCollateral'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'liquidationPenalty': { name: 'liquidationPenalty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'liquidationThreshold': { name: 'liquidationThreshold'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'maxLTV': { name: 'maxLTV'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'ReserveUserAvailability': { kind: 'OBJECT'; name: 'ReserveUserAvailability'; fields: { 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'borrow': { name: 'borrow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'supply': { name: 'supply'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; }; };
    'ReservesRequest': { kind: 'INPUT_OBJECT'; name: 'ReservesRequest'; isOneOf: false; inputFields: [{ name: 'reserveType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReservesRequestType'; ofType: null; }; }; defaultValue: "BOTH" }, { name: 'orderBy'; type: { kind: 'INPUT_OBJECT'; name: 'ReservesRequestOrderBy'; ofType: null; }; defaultValue: null }, { name: 'searchName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ReservesRequestOrderBy': { kind: 'INPUT_OBJECT'; name: 'ReservesRequestOrderBy'; isOneOf: true; inputFields: [{ name: 'borrowApy'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'supplyApy'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'canBeCollateralized'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'tokenName'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'userAvailableToBorrow'; type: { kind: 'INPUT_OBJECT'; name: 'OrderByUserCriteria'; ofType: null; }; defaultValue: null }, { name: 'userBalance'; type: { kind: 'INPUT_OBJECT'; name: 'OrderByUserCriteria'; ofType: null; }; defaultValue: null }]; };
    'ReservesRequestType': { name: 'ReservesRequestType'; enumValues: 'SUPPLY' | 'BORROW' | 'BOTH'; };
    'Signature': unknown;
    'String': unknown;
    'SupplyRequest': { kind: 'INPUT_OBJECT'; name: 'SupplyRequest'; isOneOf: false; inputFields: [{ name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AmountInput'; ofType: null; }; }; defaultValue: null }, { name: 'supplier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'onBehalfOf'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }, { name: 'permit'; type: { kind: 'INPUT_OBJECT'; name: 'PermitInput'; ofType: null; }; defaultValue: null }]; };
    'TokenAmount': { kind: 'OBJECT'; name: 'TokenAmount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'usd': { name: 'usd'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; }; };
    'Transaction': { kind: 'UNION'; name: 'Transaction'; fields: {}; possibleTypes: 'ApprovalRequired' | 'InsufficientBalanceError' | 'TransactionRequest'; };
    'TransactionRequest': { kind: 'OBJECT'; name: 'TransactionRequest'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'UserBorrowsRequest': { kind: 'INPUT_OBJECT'; name: 'UserBorrowsRequest'; isOneOf: false; inputFields: [{ name: 'markets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserBorrowsRequestOrderBy'; ofType: null; }; }; defaultValue: "{name: ASC}" }]; };
    'UserBorrowsRequestOrderBy': { kind: 'INPUT_OBJECT'; name: 'UserBorrowsRequestOrderBy'; isOneOf: true; inputFields: [{ name: 'debt'; type: { kind: 'INPUT_OBJECT'; name: 'OrderByUserCriteria'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'apy'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'UserReserveBorrowPosition': { kind: 'OBJECT'; name: 'UserReserveBorrowPosition'; fields: { 'apy': { name: 'apy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Currency'; ofType: null; }; } }; 'debt': { name: 'debt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; }; };
    'UserReserveSupplyPosition': { kind: 'OBJECT'; name: 'UserReserveSupplyPosition'; fields: { 'apy': { name: 'apy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DecimalValue'; ofType: null; }; } }; 'collateral': { name: 'collateral'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Currency'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; }; };
    'UserSuppliesRequest': { kind: 'INPUT_OBJECT'; name: 'UserSuppliesRequest'; isOneOf: false; inputFields: [{ name: 'markets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserSuppliesRequestOrderBy'; ofType: null; }; }; defaultValue: "{name: ASC}" }]; };
    'UserSuppliesRequestOrderBy': { kind: 'INPUT_OBJECT'; name: 'UserSuppliesRequestOrderBy'; isOneOf: true; inputFields: [{ name: 'balance'; type: { kind: 'INPUT_OBJECT'; name: 'OrderByUserCriteria'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'apy'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'isCollateralized'; type: { kind: 'INPUT_OBJECT'; name: 'OrderByUserCriteria'; ofType: null; }; defaultValue: null }]; };
    'WithdrawRequest': { kind: 'INPUT_OBJECT'; name: 'WithdrawRequest'; isOneOf: false; inputFields: [{ name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AmountInput'; ofType: null; }; }; defaultValue: null }, { name: 'supplier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'recipient'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ChainId'; ofType: null; }; }; defaultValue: null }]; };
    '_Service': { kind: 'OBJECT'; name: '_Service'; fields: { 'sdl': { name: 'sdl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: never;
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}